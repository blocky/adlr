// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	prettyprinter "github.com/blocky/prettyprinter"
	mock "github.com/stretchr/testify/mock"
)

// Printer is an autogenerated mock type for the Printer type
type Printer struct {
	mock.Mock
}

// Add provides a mock function with given fields: _a0
func (_m *Printer) Add(_a0 interface{}) prettyprinter.Printer {
	ret := _m.Called(_a0)

	var r0 prettyprinter.Printer
	if rf, ok := ret.Get(0).(func(interface{}) prettyprinter.Printer); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(prettyprinter.Printer)
		}
	}

	return r0
}

// Dump provides a mock function with given fields: _a0
func (_m *Printer) Dump(_a0 prettyprinter.Writer) prettyprinter.Printer {
	ret := _m.Called(_a0)

	var r0 prettyprinter.Printer
	if rf, ok := ret.Get(0).(func(prettyprinter.Writer) prettyprinter.Printer); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(prettyprinter.Printer)
		}
	}

	return r0
}

// Error provides a mock function with given fields:
func (_m *Printer) Error() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StderrDump provides a mock function with given fields:
func (_m *Printer) StderrDump() prettyprinter.Printer {
	ret := _m.Called()

	var r0 prettyprinter.Printer
	if rf, ok := ret.Get(0).(func() prettyprinter.Printer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(prettyprinter.Printer)
		}
	}

	return r0
}

// StderrDumpOnError provides a mock function with given fields:
func (_m *Printer) StderrDumpOnError() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StdoutDump provides a mock function with given fields:
func (_m *Printer) StdoutDump() prettyprinter.Printer {
	ret := _m.Called()

	var r0 prettyprinter.Printer
	if rf, ok := ret.Get(0).(func() prettyprinter.Printer); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(prettyprinter.Printer)
		}
	}

	return r0
}
